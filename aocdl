#!/bin/bash

EMPTY_SESSION="session="

# The session coookie of for https://adventofcode.com
# Add yours as "${EMPTY_SESSION}52616c74252422.."
SESSION="${EMPTY_SESSION}"

# Current date
DAY=$(date '+%-d')
CURRENT_YEAR=$(date '+%Y')
YEAR=$CURRENT_YEAR

# Output path
OUTPUT_PATH=""

# Download a single file by default
SINGLE_FILE=true

usage() { echo "Usage: $(basename "$0") [-c <session_cookie>] [-d <day>] [-y <year>] [-o '<output_file>']"; }

intent() { echo "Downloads AOC puzzle input(s)."; }

example() { echo "Example: aocdl -c 5211ca2... -d 3 -y 2016 -o 'input_2016-3.txt'"; }

arguments() {
    echo -e "\nOptional arguments:"
    echo "  -c,  set a specific session cookie"
    echo "  -d,  set a specific date for the download"
    echo "  -y,  set a specific year for the download"
    echo "  -o,  set a specific output file"
}

options() {
    echo -e "\nOptions:"
    echo "  -a,  download all puzzle inputs"
    echo "  -h,  show help"
}

show_help(){
    usage
    intent
    example
    arguments
    options
}

while getopts "c:d:y:o:ah" opt; do
    case "${opt}" in
        c)
            SESSION="${EMPTY_SESSION}${OPTARG}";;
        d)
            DAY=${OPTARG};;
        y)
            YEAR=${OPTARG};;
        o)
            OUTPUT_PATH=${OPTARG};;
        a)
            SINGLE_FILE=false;;
        h)
            show_help && exit 0;;
        *)
            echo -e "Incorrect syntax.\n" && show_help && exit 1;;
    esac
done

exit_with(){
    echo -e "$1\nAborting." && exit 1;
}

check_session_cookie() {
    if [[ $SESSION = "$EMPTY_SESSION" ]]; then
        exit_with "Please set the session cookie in the script or using the option -c."
    fi
}

check_day_and_year() {
    if [[ $YEAR -lt 2015 ]] || [[ $YEAR -gt "$CURRENT_YEAR" ]]; then 
        exit_with "The year requested must be between 2015 (creation of AOC) and $CURRENT_YEAR."
    fi
    if [[ $DAY -lt 1 ]] || [[ $DAY -gt 25 ]]; then 
        exit_with "The day requested must be between 1 and 25."
    fi
}

check_output_path() {
    if [[ $OUTPUT_PATH = "" ]]; then OUTPUT_PATH="$1/day$2.txt"; fi
    [[ -f "$OUTPUT_PATH" ]] && exit_with "Output file '$OUTPUT_PATH' already exists."
    DIR=$(dirname "$OUTPUT_PATH")
    if [[ ! -d "$DIR" ]]; then
        mkdir -p "$DIR" && echo "Creating directory $DIR/" 
    fi
}

download() {
    check_output_path "$@"
    URL="https://adventofcode.com/$1/day/$2/input"
    curl -s -b "$SESSION" "$URL" -o "$OUTPUT_PATH"
}

download_all_files() {
    days=($(seq 1 1 25))
    years=($(seq 2015 1 $((CURRENT_YEAR-1)) ))
    for year in "${years[@]}"
    do
        for day in "${days[@]}"
        do
            OUTPUT_PATH=""
            download "$year" "$day"
        done
    done
}

# Perform checks on the parameters passed.
check_session_cookie
check_day_and_year

# Run the download
if $SINGLE_FILE; then
    download "$YEAR" "$DAY"
else
    download_all_files
fi

